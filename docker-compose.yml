version: '3.7'

services:

  web:
    build: .
    env_file: .env
    container_name: web
    hostname: web
    command: sh -c "cd cnn && python manage.py migrate && python manage.py runserver_plus 0.0.0.0:8000 --print-sql"
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - redis
      - rabbitmq

  postgres:
    image: postgres:11-alpine
    container_name: postgres_CNN
    hostname: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'CnnProject'
      POSTGRES_HOST: 'postgres'
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
    restart: on-failure

  redis:               # Redis - result backend
    image: redis:5.0.7-alpine
    container_name: redis_CNN
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - ./db/redis:/data
    restart: on-failure

  rabbitmq:            # RabbitMQ - queue
    image: rabbitmq:3.8-management-alpine
    container_name: rabbitmq_CNN
    hostname: rabbitmq
    ports:
      - 5672:5672     # We forward this port because it's useful for debugging
      - 15672:15672   # Here, we can access RabbitMQ management plugin
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=rabbitpass
    volumes:
      - ./db/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@rabbit3
    restart: on-failure

  flower:
    image: mher/flower:latest
    container_name: flower_CNN
    hostname: flower
    command: sh -c "cd cnn && flower -A cnn --port=5555"
    ports:
      - 8888:8888
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=8888
    depends_on:
      - rabbitmq
    restart: "no"

  celery_worker:
    build: .
    env_file: .env
    container_name: celery_worker_CNN
    hostname: celery_worker
    command: sh -c "dockerize -wait tcp://rabbitmq:5672 && cd cnn && celery -A cnn worker -l info"
    volumes:
      - .:/code
    depends_on:
      - celery_beat
    restart: "no"

  celery_beat:
    build: .
    env_file: .env
    container_name: celery_beat_CNN
    hostname: celery_beat
    command: sh -c "dockerize -wait tcp://rabbitmq:5672 && cd cnn && celery -A cnn beat -l info"
    volumes:
      - .:/code
    depends_on:
      - web
      - postgres
      - redis
      - rabbitmq
    restart: "no"
